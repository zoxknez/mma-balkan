generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model NewsItem {
  id           String   @id @default(cuid())
  source       String
  title        String
  url          String   @unique
  publishedAt  DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  tags         String[]
  // Optional original summary/description from RSS
  summary            String?
  // Auto-translation metadata and content (e.g., to Serbian)
  originalLang       String?
  translatedTitle    String?
  translatedSummary  String?
  translatedAt       DateTime?
}

model Organization {
  id        String  @id @default(cuid())
  name      String  @unique
  country   String?
  website   String?
  events    Event[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Fighter {
  id         String  @id @default(cuid())
  firstName  String
  lastName   String
  nickname   String?
  country    String?
  stance     String?
  reachInCm  Int?
  heightInCm Int?
  birthDate  DateTime?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  boutsA     Bout[]   @relation("FighterA")
  boutsB     Bout[]   @relation("FighterB")
}

model Event {
  id           String        @id @default(cuid())
  organization Organization  @relation(fields: [organizationId], references: [id])
  organizationId String
  name         String
  location     String?
  startsAt     DateTime
  status       String        @default("scheduled") // scheduled|live|finished
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  bouts        Bout[]
}

model Bout {
  id         String   @id @default(cuid())
  event      Event    @relation(fields: [eventId], references: [id])
  eventId    String
  fighterA   Fighter  @relation("FighterA", fields: [fighterAId], references: [id])
  fighterAId String
  fighterB   Fighter  @relation("FighterB", fields: [fighterBId], references: [id])
  fighterBId String
  weightClass String?
  roundCount  Int? 
  result      String? // e.g., A/B/Draw/NC or method string
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  predictions Prediction[]
}

model Prediction {
  id        String   @id @default(cuid())
  bout      Bout     @relation(fields: [boutId], references: [id])
  boutId    String
  model     String
  probA     Float
  probB     Float
  createdAt DateTime @default(now())
}

model ForumThread {
  id        String       @id @default(cuid())
  title     String
  createdAt DateTime     @default(now())
  posts     ForumPost[]
}

model ForumPost {
  id        String      @id @default(cuid())
  thread    ForumThread @relation(fields: [threadId], references: [id])
  threadId  String
  author    String
  content   String
  createdAt DateTime    @default(now())
}
